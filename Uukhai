
#include <SoftwareSerial.h>


// Motor pins
const int mot1_pwm = 6;
const int mot2_pwm = 5;
const int mot1_b = 7;
const int mot1_a = 8;
const int mot2_a = 2;
const int mot2_b = 4;
const int stby = 9;
SoftwareSerial mySerial(12, 11);

void setup() {
  // Initialize motors
  pinMode(mot1_pwm, OUTPUT);
  pinMode(mot2_pwm, OUTPUT);
  pinMode(mot1_a, OUTPUT);
  pinMode(mot1_b, OUTPUT);
  pinMode(mot2_a, OUTPUT);
  pinMode(mot2_b, OUTPUT);
  pinMode(stby, OUTPUT);
  digitalWrite(stby, HIGH); // Enable motor driver
  analogWrite(mot1_pwm, 0);
  analogWrite(mot2_pwm, 0);
  Serial.begin(9600);
  mySerial.begin(9600);
}

void loop() {
  digitalWrite(mot1_a,HIGH);
  digitalWrite(mot1_b,LOW);
  digitalWrite(mot2_a,LOW);
  digitalWrite(mot2_b,HIGH);
  shugam_dagah();
  
}

void shugam_dagah ( ){
int s1 = analogRead(A0); // 1-р мэдрэгч
int s2 = analogRead(A1); // 2-р мэдрэгч
int s3 = analogRead(A2); // 3-р мэдрэгч
int s4 = analogRead(A3); // 4-р мэдрэгч
int s5 = analogRead(A6); // 5-р мэдрэгч
int s6 = analogRead(A7); // 6-р мэдрэгч
// 1-6 дугаар мэдрэгчийн утгыг хэвлэж харуулах
Serial.print(s1);
Serial.print(" ");
Serial.print(s2);
Serial.print(" ");
Serial.print(s3);
Serial.print(" ");
Serial.print(s4);
Serial.print(" ");
Serial.print(s5);
Serial.print(" ");
Serial.println(s6);
if(Serial.available()) 
  {
    mySerial.write(Serial.read());//Forward what Serial received to Software Serial Port
  }
  if(mySerial.available()) 
  {
    Serial.write(mySerial.read());//Forward what Software Serial received to Serial Port
  }
delay (50);
int motor_hurd = 100;
if (s1>500 && s2>500 && s3<50 && s4<50 && s5>500 && s6>500){
analogWrite(mot1_pwm, motor_hurd);
analogWrite(mot2_pwm, motor_hurd);
}
else if (s1>500 && s2>500 && s3>180 && s4<50 && s5>500 && s6>500)
{
analogWrite(mot1_pwm, (motor_hurd-10));
analogWrite(mot2_pwm, (motor_hurd+10));
}
else if (s1>500 && s2>500 && s3>500 && s4<50 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd-20));
analogWrite(mot2_pwm, (motor_hurd+20));
}
else if (s1>500 && s2>500 && s3>500 && s4<600 && s5<680 && s6>500){
analogWrite(mot1_pwm, (motor_hurd-30));
analogWrite(mot2_pwm, (motor_hurd+30));}
else if (s1>500 && s2>500 && s3>500 && s4>500 && s5<680 && s6<380)
{
analogWrite(mot1_pwm, (motor_hurd-40));
analogWrite(mot2_pwm, (motor_hurd+40));
}
else if (s1>500 && s2>500 && s3>500 && s4<50 && s5>170 && s6<50){
analogWrite(mot1_pwm, (motor_hurd-50));
analogWrite(mot2_pwm, (motor_hurd+50));}
if (s1>500 && s2>500 && s3>500 && s4>500 && s5>500 && s6<50){
analogWrite(mot1_pwm, (motor_hurd-70));
analogWrite(mot2_pwm, (motor_hurd+70));}
else if (s1>500 && s2>500 && s3<50 && s4<50 && s5<200 && s6<50){
analogWrite(mot1_pwm, (motor_hurd-60));
analogWrite(mot2_pwm, (motor_hurd+60));}

else if (s1<50 && s2<50 && s3<50 && s4<379 && s5>500 && s6>500)
{
analogWrite(mot1_pwm, (motor_hurd+70));
analogWrite(mot2_pwm, (motor_hurd-70));}
else if (s1<50 && s2<50 && s3<50 && s4<50 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd+60));
analogWrite(mot2_pwm, (motor_hurd-60));}
else if (s1<50 && s2>150 && s3>500 && s4>500 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd+60));
analogWrite(mot2_pwm, (motor_hurd-60));}
else if (s1<50 && s2>500 && s3>500 && s4>500 && s5>500 && s6>500)
{
analogWrite(mot1_pwm, (motor_hurd+70));
analogWrite(mot2_pwm, (motor_hurd-70));
}
else if (s1<60 && s2<50 && s3>500 && s4>500 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd+40));
analogWrite(mot2_pwm, (motor_hurd-40));}
else if (s1>500 && s2<50 && s3>270 && s4>500 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd+30));
analogWrite(mot2_pwm, (motor_hurd-30));}
else if (s1>500 && s2<50 && s3<50 && s4>500 && s5>500 && s6>500){
analogWrite(mot1_pwm, (motor_hurd+20));
analogWrite(mot2_pwm, (motor_hurd-20));}
else if (s1>500 && s2>420 && s3<50 && s4>245 && s5>500 && s6>500)
{
analogWrite(mot1_pwm, (motor_hurd+10));
analogWrite(mot2_pwm, (motor_hurd-10));
}
}
